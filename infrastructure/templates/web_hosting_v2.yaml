AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for static website hosting with S3 and CloudFront'

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            MaxAge: 3000
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-WebsiteBucket'

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'Origin Access Identity for ${AWS::StackName} website'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          MinTTL: 0
          DefaultTTL: 86400
          MaxTTL: 31536000
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        HttpVersion: http2
        IPV6Enabled: true

  DeploymentUser:
    Type: AWS::IAM::User
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      UserName: !Sub '${AWS::StackName}-DeploymentUser'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-DeploymentUser'

  DeploymentAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DeploymentUser

  DeploymentPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${AWS::StackName}-DeploymentPolicy'
      Users:
        - !Ref DeploymentUser
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:DeleteObject'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws:s3:::${WebsiteBucket}'
              - !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
          - Effect: Allow
            Action:
              - 'cloudfront:CreateInvalidation'
            Resource: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

Outputs:
  WebsiteBucketName:
    Description: "S3 bucket for web hosting"
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucketName'
  
  WebsiteBucketURL:
    Description: "URL of the S3 bucket website"
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucketURL'
  
  CloudFrontDomainName:
    Description: "CloudFront domain name"
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomainName'
  
  CloudFrontDistributionId:
    Description: "CloudFront distribution ID"
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDistributionId'
  
  DeploymentUserAccessKey:
    Description: "Access key for deployment user"
    Value: !Ref DeploymentAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentUserAccessKey'
  
  DeploymentUserSecretAccessKey:
    Description: "Secret access key for deployment user"
    Value: !GetAtt DeploymentAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentUserSecretAccessKey' 