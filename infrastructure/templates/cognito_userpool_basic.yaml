AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Cognito User Pool - Basic Configuration'

Parameters:
  UserPoolName:
    Type: String
    Default: 'BasicUserPool'
    Description: Name of the Cognito User Pool

  AdminEmail:
    Type: String
    Description: Email address for the admin user

Resources:
  CognitoUserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: !Ref UserPoolName
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true  # Users cannot sign themselves up
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT  # Use Cognito's default email service
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      UsernameAttributes:
        - email

  # Client app for the User Pool
  UserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      ClientName: !Sub '${UserPoolName}-client'
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED

Outputs:
  UserPoolId:
    Value: !Ref CognitoUserPool
    Description: ID of the Cognito User Pool
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolId'

  UserPoolClientId:
    Value: !Ref UserPoolClient
    Description: ID of the Cognito User Pool Client
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolClientId'

  UserPoolArn:
    Value: !GetAtt CognitoUserPool.Arn
    Description: ARN of the Cognito User Pool
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolArn' 